#!/bin/bash

# This script will rotate the internal display and pen/touch input devices
# on the Lenovo ThinkPad Helix.
#
# Possible arguments are normal xrandr orientations:
#      normal, left, inverted, right

set -e

#
# Static options
#

# The name of the output for the internal display
output_name="eDP1" # output used by the ThinkPad Helix's LCD

# The rotation to toggle to if current orientation is specified
toggle_rotation="normal"

# Define pre/post rotate hook locations
prerotate_hook="$HOME/.config/thinkpad-helix-utils/prerotate.sh"
postrotate_hook="$HOME/.config/thinkpad-helix-utils/postrotate.sh"

# Import the configuration file if there is one. This will replace any options set above.
configfile="$HOME/.config/thinkpad-helix-utils/config"

if [[ -f "$configfile" ]]; then
	source "$configfile"
fi

#
# determine current orientation
#

# Find the line in ``xrandr -q --verbose`` output that contains current screen orientation and strip out extraneous info
orientation="$(xrandr -q --verbose | grep 'connected' | grep "$internal" | egrep -o  '\) (normal|left|inverted|right) \(' | egrep -o '(normal|left|inverted|right)')"

echo "Current orientation is $orientation."

#
# set new rotation
#

# Execute pre-rotate hook
if [[ -f "$prerotate_hook" ]]; then
	echo "Executing pre-rotate hook..."
    "$prerotate_hook"
fi

args=$@
if [[ ${#args[@]} > 0 ]]; then
	rotation=${args[0]}
fi

if [[ -n "$rotation" ]]; then
	# If the specified state is the current one, toggle to specified orientation. This enables toggling rotation with one command.
	if [[ "$orientation" = "$rotation" ]]; then
		echo "Current orientation specified, reverting to $toggle_rotation."
		rotation=$toggle_rotation
	else
		echo "Setting screen orientation to $rotation."
	fi
else
	# No options were specified. Cycle orientations by default.
	case "$orientation" in
		normal)
			rotation=right
			;;
		right)
			rotation=inverted
			;;
		inverted)
			rotation=left 
			;;
		left)
			rotation=normal
			;;
	esac
	echo "No options specified, cycling to $rotation by default"
fi

echo "Rotating screen to $rotation"

# Rotate display
xrandr --output "$output_name" --rotate "$rotation"

# Execute post-rotate hook
if [[ -f "$postrotate_hook" ]]; then
	echo "Executing post-rotate hook..."
	"$postrotate_hook"
fi
exit
