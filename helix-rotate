#!/bin/bash

# A simple orientation-cycling script for use on tablets
# 	like the Lenovo ThinkPad Helix
#
# Possible arguments are simple relative directions:
#      left, flip, right

set -e

#
# Static options
#

# The name of the output for the internal display
output_name="eDP1" # output used by the ThinkPad Helix's LCD

# Define pre/post rotate hook locations
prerotate_hook="$HOME/.config/thinkpad-helix-utils/prerotate.sh"
postrotate_hook="$HOME/.config/thinkpad-helix-utils/postrotate.sh"

# Import the configuration file if there is one. This will replace any options set above.
configfile="$HOME/.config/thinkpad-helix-utils/config"

if [[ -f "$configfile" ]]; then
	source "$configfile"
fi

#
# determine current orientation
#

# Find the line in ``xrandr -q --verbose`` output that contains current screen orientation and strip out extraneous info
orientation="$(xrandr -q --verbose | grep 'connected' | grep "$internal" | egrep -o  '\) (normal|left|inverted|right) \(' | egrep -o '(normal|left|inverted|right)')"

echo "Current orientation is $orientation."

#
# set new rotation
#

# Execute pre-rotate hook
if [[ -f "$prerotate_hook" ]]; then
	echo "Executing pre-rotate hook..."
    "$prerotate_hook"
fi

args=$@
if [[ ${#args[@]} > 0 ]]; then
	direction=${args[0]}
fi

if [[ -n "$direction" ]]; then
	if [[ "$direction" = "left" ]]; then
		case "$orientation" in
			normal)
				rotation=left
				;;
			left)
				rotation=inverted
				;;
			inverted)
				rotation=right 
				;;
			right)
				rotation=normal
				;;
		esac
	elif [[ "$direction" = "flip" ]]; then
		case "$orientation" in
			normal)
				rotation=inverted
				;;
			right)
				rotation=left
				;;
			inverted)
				rotation=normal
				;;
			left)
				rotation=right
				;;
		esac
	elif [[ "$direction" = "right" ]]; then
		case "$orientation" in
			normal)
				rotation=right
				;;
			right)
				rotation=inverted
				;;
			inverted)
				rotation=left 
				;;
			left)
				rotation=normal
				;;
		esac
	fi
else
	echo "No direction specified. Try left, flip, or right."
	exit
fi

echo "Rotating screen to $rotation"

# Rotate display
xrandr --output "$output_name" --rotate "$rotation"

# Execute post-rotate hook
if [[ -f "$postrotate_hook" ]]; then
	echo "Executing post-rotate hook..."
	"$postrotate_hook"
fi
exit
